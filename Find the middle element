/*As a part of this Kata, you need to create a function that when provided with a triplet, returns the index of the numerical element that lies between the other two elements.
The input to the function will be an array of three distinct numbers (Haskell: a tuple).
For example:
gimme([2, 3, 1]) => 0*/


/*order the array without modifying the original array
exract middle value
look for middle value index in original array*/


/*let ordArr = arr.sort((a,b)=> a-b)  //order the array without modifying the original array
var middle = arr[1]  //exract middle value
return arr.indexof(middle)*/


/*function gimme (inputArray) {
  let ordArr = inputArray.concat().sort((a,b)=> a-b) 
  let middle = ordArr[1] 
  return inputArray.indexOf(middle)
};*/


//FINAL CODE
var gimme = function (inputArray) {
  return inputArray.indexOf(inputArray.concat().sort((a,b)=> a-b)[1])
};
